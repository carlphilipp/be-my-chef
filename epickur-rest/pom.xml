<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.epickur.api</groupId>
		<artifactId>epickur-parent</artifactId>
		<version>2.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>epickur-rest</artifactId>
	<packaging>war</packaging>

	<name>REST</name>
	<description>REST Epickur Module.</description>

	<dependencies>
		<!-- Epickur Service -->
		<dependency>
			<groupId>com.epickur.api</groupId>
			<artifactId>epickur-service</artifactId>
		</dependency>
		<dependency>
			<groupId>com.epickur.api</groupId>
			<artifactId>epickur-test</artifactId>
		</dependency>

		<!-- Servlet 3.1 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>
		<finalName>epickur</finalName>

		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>2.9</version>
			</extension>
		</extensions>

		<plugins>

			<!-- Warify -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<!-- Deploy Tomcat 8 -->
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.4.12</version>
				<configuration>

					<!-- Container configuration -->
					<container>
						<containerId>tomcat8x</containerId>
					</container>

					<!-- Configuration to use with the container -->
					<configuration>
						<home>${project.build.directory}/tomcat8x</home>
						<properties>
							<cargo.servlet.port>8180</cargo.servlet.port>
						</properties>
					</configuration>
					<deployables>
						<deployable>
							<groupId>com.epickur.api</groupId>
							<artifactId>epickur-rest</artifactId>
							<type>war</type>
						</deployable>
					</deployables>
				</configuration>
				<executions>
					<execution>
						<id>start-container</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop-container</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Create API doc documentation into target/site directory -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>create-apidoc</id>
						<phase>pre-site</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo message="Creating API doc" />
								<!-- Does not work on linux/mac. Need to fix that -->
								<exec executable="${basedir}/src/main/scripts/windows/generate-api.bat" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Rename war to given war name -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<warName>${war.name}</warName>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.5</version>
				<configuration>
					<skipEmptyReport>false</skipEmptyReport>
					<linkXRef>true</linkXRef>
					<sourceEncoding>utf-8</sourceEncoding>
					<minimumTokens>100</minimumTokens>
					<targetJdk>1.8</targetJdk>
					<printFailingErrors>true</printFailingErrors>
					<failOnViolation>true</failOnViolation>
					<rulesets>
						<ruleset>../src/main/resources/lombokRuleset.xml
						</ruleset>
					</rulesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<configuration>
					<stylesheetfile>../src/main/resources/stylesheet.css</stylesheetfile>
					<quiet>true</quiet>
					<additionalparam>-Xdoclint:none</additionalparam>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<war.name>epickur</war.name>
			</properties>
			<build>

				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
						<excludes>
							<exclude>apidoc/**</exclude>
							<exclude>epickur-eclipse-profil.xml</exclude>
						</excludes>
					</resource>
				</resources>

				<plugins>

					<!-- Site -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-site-plugin</artifactId>
						<version>3.4</version>
						<dependencies>
							<dependency><!-- add support for ssh/scp -->
								<groupId>org.apache.maven.wagon</groupId>
								<artifactId>wagon-ssh</artifactId>
								<version>2.9</version>
							</dependency>
						</dependencies>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>test</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<delete file="Delete ${env.CATALINA_BASE}/webapps/${war.name}.war"/>
										<delete dir="${env.CATALINA_BASE}/webapps/${war.name}"/>
										<copy file="target/${war.name}.war" todir="${env.CATALINA_BASE}/webapps/"/>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

		<profile>
			<id>aws</id>
			<properties>
				<war.name>ROOT</war.name>
			</properties>
			<build>
				<!-- Remove resources env and log4j.xml -->
				<resources>
					<resource>
						<directory>${project.basedir}/src/main/resources</directory>
						<filtering>true</filtering>
						<excludes>
							<exclude>apidoc/**</exclude>
							<exclude>epickur-eclipse-profil.xml</exclude>
						</excludes>
					</resource>
				</resources>

				<plugins>
					<!-- Inject log4j.prod.xml into build directory -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>upload</id>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo
											message="Connecting to ${server.login}@${server.address}:${server.base}" />

										<echo message="Push ${war.name}.war to /home/tomcat7" />
										<scp trust="yes"
											todir="${server.login}:${server.password}@${server.address}:/home/tomcat7"
											file="${basedir}/target/${war.name}.war">
										</scp>

										<echo message="Stoping tomcat..." />
										<sshexec host="${server.address}" username="${server.login}"
											password="${server.password}" command="${server.base}/bin/shutdown.sh" />

										<echo message="Cleaning webapps directory..." />
										<sshexec host="${server.address}" username="${server.login}"
											password="${server.password}" command="rm -f -R ${server.base}/webapps/*" />

										<echo message="Cleaning temporary files..." />
										<sshexec host="${server.address}" username="${server.login}"
											password="${server.password}"
											command="rm -f -R ${server.base}/work/*;rm -f -R ${server.base}/temp/*" />

										<echo
											message="Move ${war.name}.war from /home/tomcat7 to ${server.base}/webapps" />
										<sshexec host="${server.address}" username="${server.login}"
											password="${server.password}"
											command="mv /home/tomcat7/${war.name}.war ${server.base}/webapps" />

										<echo message="Starting tomcat..." />
										<sshexec host="${server.address}" username="${server.login}"
											password="${server.password}" command="/opt/tomcat8/bin/startup.sh" />
									</target>
								</configuration>
							</execution>
							<execution>
								<id>create-apidoc</id>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo message="Creating API doc" />
										<exec executable="src/main/scripts/windows/generate-api.bat" />
									</target>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant-jsch</artifactId>
								<version>1.9.6</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>