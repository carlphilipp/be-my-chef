<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.epickur.api</groupId>
		<artifactId>epickur-parent</artifactId>
		<version>4.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>rest</artifactId>
	<packaging>jar</packaging>

	<name>REST</name>
	<description>REST Epickur Module.</description>

	<dependencies>
		<!-- Epickur -->
		<dependency>
			<groupId>com.epickur.api</groupId>
			<artifactId>service</artifactId>
		</dependency>
		<dependency>
			<groupId>com.epickur.api</groupId>
			<artifactId>validation</artifactId>
		</dependency>

		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<!-- Spring transaction needed for quartz -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>

		<!-- Hibernate validation -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>javax.el</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>

		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>

	</dependencies>

	<build>
		<finalName>epickur-${version}</finalName>

		<plugins>

			<!-- Create API doc documentation into target/site directory -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>create-apidoc</id>
						<phase>pre-site</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo message="Creating API doc"/>
								<!-- Does not work on linux/mac. Need to fix that -->
								<exec executable="src/main/scripts/linux/generate-api.sh"/>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Build spring boot runnable jar -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<configuration>
					<skipEmptyReport>false</skipEmptyReport>
					<linkXRef>true</linkXRef>
					<sourceEncoding>utf-8</sourceEncoding>
					<minimumTokens>100</minimumTokens>
					<targetJdk>${java.version}</targetJdk>
					<printFailingErrors>true</printFailingErrors>
					<failOnViolation>true</failOnViolation>
					<rulesets>
						<ruleset>${project.parent.basedir}/src/main/resources/lombokRuleset.xml</ruleset>
					</rulesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<stylesheetfile>${project.parent.basedir}/src/main/resources/stylesheet.css</stylesheetfile>
					<quiet>true</quiet>
					<additionalparam>-Xdoclint:none</additionalparam>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<war.name>epickur</war.name>
			</properties>
			<build>

				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
						<excludes>
							<exclude>apidoc/**</exclude>
							<exclude>epickur-eclipse-profil.xml</exclude>
						</excludes>
					</resource>
				</resources>

				<plugins>

					<!-- Site -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-site-plugin</artifactId>
						<version>3.4</version>
						<dependencies>
							<dependency><!-- add support for ssh/scp -->
								<groupId>org.apache.maven.wagon</groupId>
								<artifactId>wagon-ssh</artifactId>
								<version>2.9</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>aws</id>
			<properties>
				<war.name>ROOT</war.name>
			</properties>
			<build>
				<!-- Remove resources env and log4j.xml -->
				<resources>
					<resource>
						<directory>${project.basedir}/src/main/resources</directory>
						<filtering>true</filtering>
						<excludes>
							<exclude>apidoc/**</exclude>
							<exclude>epickur-eclipse-profil.xml</exclude>
						</excludes>
					</resource>
				</resources>

				<plugins>
					<!-- Inject log4j.prod.xml into build directory -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>upload</id>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo message="Connecting to ${server.login}@${server.address}:${server.base}"/>

										<echo message="Push ${war.name}.war to /home/tomcat7"/>
										<scp trust="yes"
											 todir="${server.login}:${server.password}@${server.address}:/home/tomcat7"
											 file="${basedir}/target/${war.name}.war">
										</scp>

										<echo message="Stoping tomcat..."/>
										<sshexec host="${server.address}" username="${server.login}"
												 password="${server.password}" command="${server.base}/bin/shutdown.sh"/>

										<echo message="Cleaning webapps directory..."/>
										<sshexec host="${server.address}" username="${server.login}"
												 password="${server.password}" command="rm -f -R ${server.base}/webapps/*"/>

										<echo message="Cleaning temporary files..."/>
										<sshexec host="${server.address}" username="${server.login}"
												 password="${server.password}"
												 command="rm -f -R ${server.base}/work/*;rm -f -R ${server.base}/temp/*"/>

										<echo
												message="Move ${war.name}.war from /home/tomcat7 to ${server.base}/webapps"/>
										<sshexec host="${server.address}" username="${server.login}"
												 password="${server.password}"
												 command="mv /home/tomcat7/${war.name}.war ${server.base}/webapps"/>

										<echo message="Starting tomcat..."/>
										<sshexec host="${server.address}" username="${server.login}"
												 password="${server.password}" command="/opt/tomcat8/bin/startup.sh"/>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>create-apidoc</id>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo message="Creating API doc"/>
										<exec executable="src/main/scripts/linux/generate-api.sh"/>
									</target>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant-jsch</artifactId>
								<version>1.9.6</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
